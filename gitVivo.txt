Git

Trabajo colaborativo
Git nos ayuda al trabajo colaborativo, es un programa de control de versiones
Me permite controlar las versiones que yo voy haciendo de mi proyecto
Cuando instalamos algo en la pc nos viene una version,
Que cada tanto salta alguna actualizacion
Esto tambien se aplica a cuando estamos trabajando un proyecto
Hay distintas versiones, para controlar que funcionalidades tenia el proyecto
Que funcionalidades tiene y que funcionalidades puede tener


Git no es lo mismo que github
Cuando trabajamos con git siempre trabajamos desde la consola pq son comandos

Si yo rompo el codigo, con git siempre tengo la chance de volver una version para atras


Marcamos en la linea de tiempo las distintas versiones, 
Fue desarrollado por la misma persona que creo linux
Por eso en linux viene instalado, en windows hay que instalarlo aparte
El programa controla las versiones


Para abrir la consola
comand 
Ir actualizando git cada dos o tres meses desde la pagina
git --version para ver la version de git en la consola



Para abrir una carpeta en la consola escribimos
cd y arrastro la carpeta
automaticamente la consola de git se va a posicionar en ese directorio
Luego hay que inicializar el repositorio
Vamos a inicializar un proyecto en node y un proyecto en git

con el comando: code .
me va a abrir esa carpeta en visual

En esa carpeta, tengo 4 archivos js, que le quiero emepzar a poner un control de version
Tendria que inicializarlo como un repositorio de git

Tenemos cuenta en github
Subir proyectos a github
La extension liveshare es conveniente hacerla con zoom o meet 

Para iniciar, se puede hacer a traves de la console de visual o de la consola de gitbash
Tengo que estar posicionado en la carpeta donde lo voy a inicializar

En VS, en las ramitas, me dice los cambios pendientes que tengo dsp de darle git init
Que significa que hay archivos que no estan siendo controlados ni seguidos

git add para agregar archivos

configurar el usuario y el email
git config user.name
git config user.mail

git commit - quiere decir que todo lo que esta vamos a levnatarlo para llevarlo a la nube 

eso es commitear

pushear es empujar todo eso a un repositorio git

Para eso, antes debo crear mi repositorio en github

No tildar la opcion read.me
Me va a dar la url y me va a decir que poner en la consola

En parentesis me va a decir la rama, master es la rama principal
la crea automaticamente git
Si queremos main, antes del git commit ponemos git brunch - M main

Ahora tengo linkeado mi repo local con mi repo en la nube

orden:
git status Para saber en q estado estoy
git add . para todo o solo el archivo
git commit-m"mensaje"
git push (no hace falta el origin master para actualizar)

Puedo crear nuevas ramas e ir clonando el repo en esas ramas
Normalmente nunca se trabaja en master
de la rama master sale una depp
de esa rama sale una rama testing
Entonces vamos pusheando de rama en rama
y la rama master la toca una sola persona
Desarrolladores pasa a testing
Testing pasa a produccion
y produccion levnata

En git
en code me aparece un link del enlace a mi repo

Clone:
Pararme desde la consola en la carpeta que quiero tener los archivos
git clone link del repo
y se clonan los archivos en una maquina nueva 

Tengo un repositorio clonado en maquinaDelTrabajo, simulando ser otra computadora

Archivo readme

add a Readme en git
commit new file 
y sube un archivo read.me
hace un read me del repositorio
que dice quien lo hizo, si hay que tener instalado algo, y distintas caracteristicas, etc 

Las empresas buscan que se sepa controlar un sistema de control de version, en este caso es github
Gitlab
Azure

git pull es para bajar actualizaciones, o tomar version
Si yo empiezo mi dia laboral, tomo version antes de empezar a trabajar
Es iportante hacer el git pull antes
si lo hago dsp de tocar el codigo, se rompe abajo

Hay que ver en que rama estamos parados, 
para hacer el git push origin master o origin main






